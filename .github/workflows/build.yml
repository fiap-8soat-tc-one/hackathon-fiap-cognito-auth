name: Build and Publish image to ECR
description: Build and publish Docker image to ECR with SonarQube analysis

on:
  push:
    branches: [main]
  pull_request:
    types: [opened, synchronize, reopened]
  workflow_dispatch:

env:    
  AWS_REGION: us-east-1
  ECR_REPOSITORY: auth-lambda-repo
  ECR_REGISTRY: 913524932573.dkr.ecr.us-east-1.amazonaws.com
  JAVA_VERSION: 21
  JAVA_DISTRIBUTION: 'zulu'

jobs:
  sonar-analysis:
    name: Sonar Analysis
    runs-on: ubuntu-latest
    environment: staging

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      
      - uses: actions/setup-java@v4
        with:
          java-version: ${{ env.JAVA_VERSION }}
          distribution: ${{ env.JAVA_DISTRIBUTION }}
          cache: 'maven'
      
      - name: Build and analyze
        working-directory: ./HackathonFiapCognitoAuth
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: |
          mvn -B verify sonar:sonar \
            -Dsonar.projectKey=fiap-8soat-tc-one_hackathon-fiap-cognito-auth \
            -Dsonar.coverage.jacoco.xmlReportPaths=target/site/jacoco/jacoco.xml

  deploy-ecr:
    name: Deploy to ECR
    needs: sonar-analysis
    runs-on: ubuntu-latest
    environment: staging

    steps:
      - uses: actions/checkout@v4

      - uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ vars.AWS_REGION }}

      - uses: aws-actions/amazon-ecr-login@v2
        id: login-ecr

      - name: Build and push Docker image
        run: |
          VERSION_TAG=$(date +'%Y%m%d').${{ github.run_number }}
          
          docker buildx build \
            --platform linux/amd64 \
            --provenance=false \
            -t ${{ env.ECR_REGISTRY }}/${{ env.ECR_REPOSITORY }}:latest \
            -t ${{ env.ECR_REGISTRY }}/${{ env.ECR_REPOSITORY }}:${VERSION_TAG} \
            .
          
          docker push ${{ env.ECR_REGISTRY }}/${{ env.ECR_REPOSITORY }}:latest
          docker push ${{ env.ECR_REGISTRY }}/${{ env.ECR_REPOSITORY }}:${VERSION_TAG}