name: Terraform Deploy to AWS

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

env:    
  AWS_REGION: us-east-1
  ECR_REPOSITORY: auth-lambda-repo
  ECR_REGISTRY: 913524932573.dkr.ecr.us-east-1.amazonaws.com

jobs:
  build:
    name: Terraform Deploy
    runs-on: ubuntu-latest
    
    environment:
      name: staging

    steps:
    - name: Checkout Repository
      uses: actions/checkout@v3

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ vars.AWS_REGION }}

    - name: Get Session Token
      run: echo aws sts get-session-token  

    - name: Create ECR repository if not exists
      run: |
        aws ecr describe-repositories --repository-names ${{ env.ECR_REPOSITORY }} || \
        aws ecr create-repository --repository-name ${{ env.ECR_REPOSITORY }} || \
        echo "Repository already exists, continuing..."

    - name: Build and push Docker image
      env:
        EXECUTION_DATE: ${{ format('{0}.{1}', github.run_number, steps.date.outputs.date) }}
      run: |
        # Get current date in YYYYMMdd format
        echo "date=$(date +'%Y%m%d')" >> $GITHUB_OUTPUT
        
        # Build the Docker image
        docker buildx build --platform linux/amd64 --provenance=false -t ${{ env.ECR_REGISTRY }}/${{ env.ECR_REPOSITORY }}:latest .
        
        # Tag with date and run number
        docker tag ${{ env.ECR_REGISTRY }}/${{ env.ECR_REPOSITORY }}:latest ${{ env.ECR_REGISTRY }}/${{ env.ECR_REPOSITORY }}:$(date +'%Y%m%d').${{ github.run_number }}
        
        # Push both tags
        docker push ${{ env.ECR_REGISTRY }}/${{ env.ECR_REPOSITORY }}:latest
        docker push ${{ env.ECR_REGISTRY }}/${{ env.ECR_REPOSITORY }}:$(date +'%Y%m%d').${{ github.run_number }}